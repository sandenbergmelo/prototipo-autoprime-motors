/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TwoFaRouteImport } from './routes/two-fa'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as ProposalsRouteImport } from './routes/proposals'
import { Route as LoginRouteImport } from './routes/login'
import { Route as InventoryRouteImport } from './routes/inventory'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as FakeProposalRouteImport } from './routes/fake-proposal'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CarCarIdRouteImport } from './routes/car/$carId'

const TwoFaRoute = TwoFaRouteImport.update({
  id: '/two-fa',
  path: '/two-fa',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ProposalsRoute = ProposalsRouteImport.update({
  id: '/proposals',
  path: '/proposals',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryRoute = InventoryRouteImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const FakeProposalRoute = FakeProposalRouteImport.update({
  id: '/fake-proposal',
  path: '/fake-proposal',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CarCarIdRoute = CarCarIdRouteImport.update({
  id: '/car/$carId',
  path: '/car/$carId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/fake-proposal': typeof FakeProposalRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/inventory': typeof InventoryRoute
  '/login': typeof LoginRoute
  '/proposals': typeof ProposalsRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/two-fa': typeof TwoFaRoute
  '/car/$carId': typeof CarCarIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/fake-proposal': typeof FakeProposalRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/inventory': typeof InventoryRoute
  '/login': typeof LoginRoute
  '/proposals': typeof ProposalsRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/two-fa': typeof TwoFaRoute
  '/car/$carId': typeof CarCarIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/fake-proposal': typeof FakeProposalRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/inventory': typeof InventoryRoute
  '/login': typeof LoginRoute
  '/proposals': typeof ProposalsRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/two-fa': typeof TwoFaRoute
  '/car/$carId': typeof CarCarIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/fake-proposal'
    | '/forgot-password'
    | '/inventory'
    | '/login'
    | '/proposals'
    | '/reset-password'
    | '/signup'
    | '/two-fa'
    | '/car/$carId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/fake-proposal'
    | '/forgot-password'
    | '/inventory'
    | '/login'
    | '/proposals'
    | '/reset-password'
    | '/signup'
    | '/two-fa'
    | '/car/$carId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/fake-proposal'
    | '/forgot-password'
    | '/inventory'
    | '/login'
    | '/proposals'
    | '/reset-password'
    | '/signup'
    | '/two-fa'
    | '/car/$carId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  FakeProposalRoute: typeof FakeProposalRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  InventoryRoute: typeof InventoryRoute
  LoginRoute: typeof LoginRoute
  ProposalsRoute: typeof ProposalsRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  TwoFaRoute: typeof TwoFaRoute
  CarCarIdRoute: typeof CarCarIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/two-fa': {
      id: '/two-fa'
      path: '/two-fa'
      fullPath: '/two-fa'
      preLoaderRoute: typeof TwoFaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proposals': {
      id: '/proposals'
      path: '/proposals'
      fullPath: '/proposals'
      preLoaderRoute: typeof ProposalsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory': {
      id: '/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fake-proposal': {
      id: '/fake-proposal'
      path: '/fake-proposal'
      fullPath: '/fake-proposal'
      preLoaderRoute: typeof FakeProposalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/car/$carId': {
      id: '/car/$carId'
      path: '/car/$carId'
      fullPath: '/car/$carId'
      preLoaderRoute: typeof CarCarIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  FakeProposalRoute: FakeProposalRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  InventoryRoute: InventoryRoute,
  LoginRoute: LoginRoute,
  ProposalsRoute: ProposalsRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  TwoFaRoute: TwoFaRoute,
  CarCarIdRoute: CarCarIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
